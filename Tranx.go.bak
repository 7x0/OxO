package main
import (
    "fmt"
    "time"
    "strings"
)

const codeLength = 5
const BASE62 = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
var power = [codeLength]int {14776336, 238328, 3844, 62, 1}

func IDToCode(id int) string{
    code := ""
    counter := codeLength - 1
    for ; id > 0; counter-- {
        remainder := id % 62
        code = string(BASE62[remainder]) + code
        id /= 62
    }
    for i := counter; i > -1; i-- {
        code = "a" + code
    }
    return code
}

func CodeToID(code string) int {
    id := 0
    for i := 0; i < codeLength; i++ {
        id += strings.Index(BASE62, string(code[i])) * power[i]
    }
    return id
}

func URLTransfer(id int) {
    //start := time.Now().UnixNano()
    IDToCode(id)
    //fmt.Printf("Code: %s\n", code)
    //_id := CodeToID(code)
    //stop := time.Now().UnixNano()
    //runtime := stop - start
    //fmt.Printf("Origin ID: %d, Translated code: %s, Runtime: %dns ≈ %dms\n", id,  code, runtime, runtime / 1000)
}


func main() {
    start := time.Now().UnixNano()
    for i := 0; i < 10; i++ {
        URLTransfer(i)
    }
    stop := time.Now().UnixNano()
    runt := stop - start
    fmt.Printf("Runtime: %dns ≈ %dms\n", runt, runt / 1000)
}
